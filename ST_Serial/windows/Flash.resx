<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        z2HgGUDF/Q9jYZKU/V2KzgAAAABJRU5ErkJggg==
</value>
  </data>
</root>